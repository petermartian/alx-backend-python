# deployment.yaml

# Messaging App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-app
  labels:
    app: messaging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: messaging-app
  template:
    metadata:
      labels:
        app: messaging-app
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: web
          image: messaging-app:local
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: DJANGO_SETTINGS_MODULE
              value: "messaging_app.settings"
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: username
            - name: MYSQL_DB
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: database
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: password
            - name: MYSQL_HOST
              value: "mysql-service"
            - name: MYSQL_PORT
              value: "3306"
          command: ["/bin/bash", "-lc"]
          args:
            - |
              python manage.py migrate --noinput && \
              gunicorn --bind 0.0.0.0:8000 messaging_app.wsgi:application
          readinessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 15
            failureThreshold: 3
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: messaging-app
  labels:
    app: messaging-app
spec:
  type: ClusterIP
  selector:
    app: messaging-app
  ports:
    - name: http-web
      port: 8000
      targetPort: 8000
---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: root-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: database
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: password
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysql
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306